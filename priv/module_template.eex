defmodule Chromex.DevtoolsProtocol.<%= module_name %> do
  @moduledoc """
  <%= for line <- module_doc do %> <%= line %><% end %>
  """


  <%= types %>


  <%= functions %>


  <%= if include_reduce_opts do %>
  defp reduce_opts(keys, opts) do
    keys
    |> Enum.map(fn key -> {key, Keyword.get(opts, key, :missing)} end)
    |> Enum.reduce(%{}, fn
      {_key, :missing}, acc -> acc
      {key, value}, acc -> Map.put(acc, key, value)
    end)
  end
  <% end %>
end